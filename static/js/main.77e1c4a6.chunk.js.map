{"version":3,"sources":["components/app.js","index.js"],"names":["App","props","date","Date","h","getHours","m","getMinutes","s","getSeconds","day_part","d","getFullYear","getMonth","getDate","weekday","Array","dateTime","getDay","state","currentTime","userInput","list","value","this","setState","id","Math","random","push","key","updateList","filter","item","Container","style","backgroundColor","Row","display","justifyContent","alignItems","fontSize","fontWeight","fontFamily","textAlign","color","borderTop","height","Col","md","span","offset","InputGroup","className","FormControl","placeholder","size","onChange","updateInput","target","aria-label","aria-describedby","Append","Button","variant","onClick","addItem","position","margin","width","ListGroup","map","Item","action","onDoubleClick","deleteItem","href","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77e1c4a6.chunk.js","sourcesContent":["import React,\r\n{\r\n    Component\r\n}\r\n\r\nfrom 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var date=new Date();\r\n        var h=date.getHours();\r\n        var m=date.getMinutes();\r\n        var s=date.getSeconds();\r\n        var day_part=\"AM\";\r\n        if (h===0) {\r\n            h=12;\r\n        }\r\n        if (h > 12) {\r\n            h -=12;\r\n            day_part=\"PM\";\r\n        }\r\n        h=(h < 10) ? \"0\"+h: h;\r\n        m=(m < 10) ? \"0\"+m: m;\r\n        s=(s < 10) ? \"0\"+s: s;\r\n        var time=h+\":\"+m+\":\"+s+\" \"+day_part;\r\n        var d=date.getFullYear()+'-'+(date.getMonth() + 1)+'-'+date.getDate();\r\n        var weekday=new Array(7);\r\n        weekday[0]=\"Sunday\";\r\n        weekday[1]=\"Monday\";\r\n        weekday[2]=\"Tuesday\";\r\n        weekday[3]=\"Wednesday\";\r\n        weekday[4]=\"Thursday\";\r\n        weekday[5]=\"Friday\";\r\n        weekday[6]=\"Saturday\";\r\n        var n=weekday[date.getDay()];\r\n        var dateTime=n+\" \"+d;\r\n        this.state= {\r\n            currentTime: dateTime, userInput: \"\", list: []\r\n        }\r\n    }\r\n    updateInput(value) {\r\n        this.setState( {\r\n            userInput: value,\r\n        }\r\n        );\r\n    }\r\n    addItem() {\r\n        if(this.state.userInput !=='') {\r\n            const userInput= {\r\n                id: Math.random(), value: this.state.userInput\r\n            }\r\n            ;\r\n            const list=[...this.state.list];\r\n            list.push(userInput);\r\n            this.setState( {\r\n                list, userInput: \"\"\r\n            }\r\n            );\r\n        }\r\n    }\r\n    deleteItem(key) {\r\n        const list=[...this.state.list];\r\n        const updateList=list.filter(item=> item.id !==key);\r\n        this.setState( {\r\n            list: updateList,\r\n        }\r\n        );\r\n    }\r\n    render() {\r\n        return(<Container style= {\r\n            {\r\n                backgroundColor: '#ff6666',\r\n            }\r\n        }\r\n        ><div style= {\r\n            {\r\n                backgroundColor: '#000066',\r\n            }\r\n        }\r\n        > <div><Row style= {\r\n            {\r\n                display: \"block\", justifyContent: \"center\", alignItems: \"center\", fontSize: '3rem', fontWeight: 'bolder', fontFamily: 'Lucida Handwriting', textAlign: 'center', color: 'white',\r\n            }\r\n        }\r\n        >Tracker <h3> Your <span style= {\r\n            {\r\n                color: \"blue\",\r\n            }\r\n        }\r\n        >T</span><span style= {\r\n            {\r\n                color: \"red\",\r\n            }\r\n        }\r\n        >O</span><span style= {\r\n            {\r\n                color: \"green\",\r\n            }\r\n        }\r\n        >D</span><span style= {\r\n            {\r\n                color: \"yellow\",\r\n            }\r\n        }\r\n        >O</span> list </h3><div> {\r\n            this.state.currentTime\r\n        }\r\n        </div > </Row></div> <hr style= {\r\n            {\r\n                borderTop: '1px solid white',\r\n            }\r\n        }\r\n        /> <div style= {\r\n            {\r\n                height: '580px',\r\n            }\r\n        }\r\n        > <Row> <Col md= {\r\n            {\r\n                span: 5, offset: 4\r\n            }\r\n        }\r\n        > <InputGroup className=\"mb-3\"> <FormControl placeholder=\"Add a task\" size=\"lg\" value= {\r\n            this.state.userInput\r\n        }\r\n        onChange= {\r\n            item=> this.updateInput(item.target.value)\r\n        }\r\n        aria-label=\"add something\" aria-describedby=\"basic-addon2\" /> <InputGroup.Append> <Button variant=\"info\" size=\"lg\" onClick= {\r\n            ()=>this.addItem()\r\n        }\r\n        > ADD </Button> </InputGroup.Append> </InputGroup> </Col> </Row> <Row><div style= {\r\n            {\r\n                backgroundColor: 'none', position: 'relative', display: 'block', justifyContent: \"center\", textAlign: 'center', margin: 'auto', width: '700px',\r\n            }\r\n        }\r\n        > <Col md= {\r\n            {\r\n                span: 5, offset: 4\r\n            }\r\n        }\r\n        > <div><ListGroup variant=\"flush\"> {\r\n            this.state.list.map(item=> {\r\n                return( <ListGroup.Item action onDoubleClick= {\r\n                    ()=> this.deleteItem(item.id)\r\n                }\r\n                > {\r\n                    item.value\r\n                }\r\n                </ListGroup.Item>)\r\n            }\r\n            )\r\n        }\r\n        </ListGroup></div> </Col></div> </Row> </div> <div style= {\r\n            {\r\n                color: 'white', fontSize: '20px', fontFamily: 'Dancing Script',\r\n            }\r\n        }\r\n        >NOTE:To delete any task double click on it!</div></div><footer> <p>Creator: Riya Shree<p> Email:<a href=\"mailto:rajeshwarsingh352@gmail.com\">rajeshwarsingh352@gmail.com </a></p></p></footer> </Container>);\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}